import re

class PasswordStrengthChecker:
    """
    Class to evaluate password strength based on multiple criteria.
    """

    def __init__(self, password: str):
        self.password = password

    def check_strength(self):
        """
        Analyze the password and return strength level with feedback.
        """
        length_score = len(self.password)
        uppercase = bool(re.search(r"[A-Z]", self.password))
        lowercase = bool(re.search(r"[a-z]", self.password))
        digits = bool(re.search(r"\d", self.password))
        special_chars = bool(re.search(r"[!@#$%^&*(),.?\":{}|<>]", self.password))

        score = 0
        criteria = {
            "Length (>= 8 characters)": length_score >= 8,
            "Contains Uppercase": uppercase,
            "Contains Lowercase": lowercase,
            "Contains Digits": digits,
            "Contains Special Characters": special_chars
        }

        for key, value in criteria.items():
            if value:
                score += 1

        if score == 5:
            strength = "Very Strong 💪"
        elif score >= 4:
            strength = "Strong 🔒"
        elif score >= 3:
            strength = "Moderate ⚠️"
        elif score >= 2:
            strength = "Weak 🚫"
        else:
            strength = "Very Weak ❌"

        return strength, criteria

def main():
    print("=== Password Complexity Checker ===")

    while True:
        password = input("\nEnter a password to check (or type 'exit' to quit): ").strip()
        if password.lower() == 'exit':
            print("Exiting...")
            break

        checker = PasswordStrengthChecker(password)
        strength, details = checker.check_strength()

        print(f"\nPassword Strength: {strength}")
        print("Criteria Evaluation:")
        for rule, passed in details.items():
            status = "✅" if passed else "❌"
            print(f"- {rule}: {status}")

if __name__ == "__main__":
    main()
